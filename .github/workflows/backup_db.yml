name: Backup Prod Database
run-name: Backup number ${{github.run_number}}

on:
    schedule:
        # Cada 10 dias se ejecuta un backup
        - cron: '0 0 */2 * *'
    workflow_dispatch:


jobs:
    determine_date:
        name: Get today's date
        runs-on: ubuntu-latest
        outputs:
            today: ${{ steps.get-date.outputs.date }}
        steps:
            - name: Get current date
              id: get-date
              shell: bash
              run: echo "date=$(date +'%d-%m-%Y')" >> "$GITHUB_OUTPUT"

    backup_db:
        name: Make Prod Db Backup and Upload Artifact
        runs-on: ubuntu-latest
        env:
            TODAY: ${{ needs.determine_date.outputs.today }}
        needs: determine_date
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 1
            - name: Postgres Dump Backup
              uses: tj-actions/pg-dump@v3
              with:
                database_url: "${{ secrets.DB_URL}}"
                postgresql_version: "16"
                path: "backups/db-prod-${{ env.TODAY }}.bak" 
                options: "-O"
            - name: Upload Backup Artifact
              uses: actions/upload-artifact@v4
              with:
               name: db-prod-${{ env.TODAY }}
               path: "backups/db-prod-${{ env.TODAY }}.bak" 
               retention-days: 1

    # Despues bajo el backup y lo subo a Azure
    upload_azure_blob:
        name: Download Artifact and Upload to Azure Blob Storage
        runs-on: ubuntu-latest
        env:
            TODAY: ${{ needs.determine_date.outputs.today }}
            AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        needs: [determine_date, backup_db]
        steps:
            - name: Download Backup File
              uses: actions/download-artifact@v4
              with:
                name: db-prod-${{ env.TODAY }}
            
            - name: Upload To Azure Blob Storage
              uses: azure/cli@v2
              with:
                inlineScript: |
                    az storage blob upload --file db-prod-${{ env.TODAY }}.bak --container-name backups-db --connection-string "${{ env.AZURE_STORAGE_CONNECTION_STRING }}" --name db-prod-${{ env.TODAY }}.bak --overwrite


    
    
 

